#!/bin/sh

if [ -z "$1" ]; then
  if [ -w /dev/stderr ]; then
    echo 'No parameter #1 detected.  Aborting.' > /dev/stderr
  fi
  exit 1
fi

if [ -z "$2" ]; then
  if [ -w /dev/stderr ]; then
    echo 'No parameter #2 detected.  Aborting.' > /dev/stderr
  fi
  exit 2
fi

pythons_to_try=$(realpath $(whereis -b `echo "$1" | sed 's/,/ /g'` | tr ' ' '\n' | grep ^/) 2>/dev/null | sort | uniq)

if [ -z "$pythons_to_try" ]; then
  if [ -w /dev/stderr ]; then
    echo "No compatible Python interpreters found for specification string \"$1\".  Aborting." > /dev/stderr
  fi
  exit 3
fi

shift

chosen=$(for executable in $(for py in $(sha512sum $pythons_to_try 2>/dev/null | sort | uniq -w128 | sed 's/^.* //'); do echo `$py -c 'import sys; print (sys.version, "//", sys.version_info, "// VALID")' 2>/dev/null` // $py; done | grep VALID | sed "s/^('//" | sort -nr | sed 's,^.*// ,,'); do if $executable -c "compile(open('$1').read(),'','exec')" 2>/dev/null; then echo $executable; break; fi; done)

if [ -n "$chosen" ]; then
  if [ -n "$DEBUG" ] && [ "$DEBUG" -gt 1 ] && [ -w /dev/stderr ]; then
    echo Chosen Python for \"$1\": \"$chosen\" > /dev/stderr
  fi
else
  if [ -w /dev/stderr ]; then
    echo "No compatible Python interpreter found for \"$1\".  Aborting." > /dev/stderr
  fi
  exit 4
fi

$chosen "$@"

